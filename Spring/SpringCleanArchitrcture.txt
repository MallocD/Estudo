Verbos HTTP:

GET-> Requisitar informações da url
POST-> Inserir uma informação
PUT-Atualizar um objeto como um todo
PATCH-> Atualizar algo em específico, como uma senha
DELETE -> Deleta

Códigos HTTP->
1xx-> Informações
2xx-> Sucesso na requisição
3xx-> Redirecionamentos
4xx-> Erro no lado do cliente
5xx-> Erro no lado do servidor

Sempre tratar exceptions//

\\Idempotência//


*Uma requisição idempotente é aquele que, independente da quantidade de vezes que se execute, o efeito é o mesmo que da primeira execução;

*Post-> Irá alterar o estado no servidor, cria recurso, logo, não é idempotente

*GET,PUT,DELETE,HEAD,OPTIONS E TRACE são idempotentes

\\n+1 em REST APIs//
Fazendo requests mais de uma vez para criar um componente na API para o frontEnd

\\API First//


Pré-Requisitos
*Arquitetura hexagonal aplicado ao projeto
   ->Application Layer
	->Configs
	->Controllers(conceito de fronteira)//Ioc, inversão de controles
		  -DTOs(request,response)
		  -Bean Validations
		  -Init Binders(Validações costumizadas)
	          -Error Handlers(Exceptions costumizadas)Stacks//

*Domain Layer
 -Entidades
 -Portas(interfaces)
 -Services
*Resource Layer
 -Spring data repository
 -Proxy repository(composição com spring data repository
 e implementações interface repository do domínio)
 -Entidades mapeadas com anotações de acordo com 
 tecnologia de banco de dados escolhida para o projeto
*Testes

->Dockerização
  -Script e configuração para criação de imagem
  -Compose yaml do serviço
  -Usando o docker-compose para subir o serviço
->Heroku
  -Criando uma app
  -Conectando com o github do projeto
  -Automatizando o pipeline de deploy


Vantagens//

Principal objetivo de uso de Clean Architecture é fornecer aos desenvolvedores uma maneira de organizar o código de forma que
o encapsule a lógica de negócios, mas mantenha-o separado do mecanismo de entrega;

*Vantagens:
-Independencia de interfaces de usuário
-Independencia de stack tecnológica utilizada para acesso aos daodos e ou expor entradas;
-Testável
-Carga cognitiva de entendimento do projeto, regras de negócio//Capacidade de facil entedimento pelo recptor
-Facilita manutenabilidade
			



